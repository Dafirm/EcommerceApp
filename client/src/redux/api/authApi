// import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
// import { LoginInput } from "../../pages/Login";
// import { RegisterInput } from "../../pages/Signup";
// import { IGenericResponse } from "types";
// import { userApi } from "./userApi";

// const BASE_URL = "http://localhost:4000/api/v1/users"

// export const authApi = createApi({
//   reducerPath: "authApi",
//   baseQuery: fetchBaseQuery({
//     baseUrl: `${BASE_URL}/api/v1/users`,
//   }),
//   endpoints: (builder) => ({
//     registerUser: builder.mutation<IGenericResponse, RegisterInput>({
//       query(data) {
//         return {
//           url: "signup",
//           method: "POST",
//           body: data,
//         };
//       },
//     }),
//     loginUser: builder.mutation<
//       { access_token: string; status: string },
//       LoginInput
//     >({
//       query(data) {
//         return {
//           url: "signin",
//           method: "POST",
//           body: data,
//           credentials: "include",
//         };
//       },
//       async onQueryStarted(args, { dispatch, queryFulfilled }) {
//         try {
//           await queryFulfilled;
//           await dispatch(userApi.endpoints.getMe.initiate(null));
//         } catch (error) {}
//       },
//     }),
//     verifyEmail: builder.mutation<
//       IGenericResponse,
//       { verificationCode: string }
//     >({
//       query({ verificationCode }) {
//         return {
//           url: `verifyemail/${verificationCode}`,
//           method: "GET",
//         };
//       },
//     }),
//     logoutUser: builder.mutation<void, void>({
//       query() {
//         return {
//           url: "logout",
//           credentials: "include",
//         };
//       },
//     }),
//   }),
// });

// export const {
//   useLoginUserMutation,
//   useRegisterUserMutation,
//   useLogoutUserMutation,
//   useVerifyEmailMutation,
// } = authApi;
